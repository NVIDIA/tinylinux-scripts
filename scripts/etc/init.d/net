#!/sbin/rc

# Copyright (c) 2009-2019, NVIDIA CORPORATION.  All rights reserved.
# See /etc/LICENSE file for details.

# File to store the started interface name
SAVED_IFACE_FILE="/var/run/net.iface"

# Process kernel arguments
parse_opt()
{
    echo "$1" | cut -f 2- -d '='
}
for ARG in `cat /proc/cmdline`; do
    #echo "Parsing option $ARG"
    case "$ARG" in
        net\=*) IFACE=`parse_opt "$ARG"` ;;
        staticip\=*) STATICIP=`parse_opt "$ARG"` ;;
        gateway\=*) GATEWAY=`parse_opt "$ARG"` ;;
        dns\=*) DNS=`parse_opt "$ARG" | sed "s/,/ /g"` ;;
        dnsdomain\=*) DNSDOMAIN=`parse_opt "$ARG"` ;;
        nfsshare\=*) IFACE="none" ;; # DHCP already done
    esac
done

start()
{
    # Wait for the network interface if it does not exist
    if [ ! -d "/sys/class/net/$IFACE" -a -n "$TIMEOUT" ]; then
        echo -n " waiting for $IFACE" >&2
        local LOOP=0
        while [ $LOOP -lt $TIMEOUT ]; do
            [ ! -d "/sys/class/net/$IFACE" ] || break
            LOOP=$(($LOOP + 1))
            sleep 1
            echo -n "." >&2
        done
    fi

    # Bring up networking
    if [ -d "/sys/class/net/$IFACE" ]; then
        if [ "$STATICIP" ]; then
            NETMASK=`echo "$STATICIP" | cut -f 2 -d '/'`
            STATICIP=`echo "$STATICIP" | cut -f 1 -d '/'`
            [ "$NETMASK" ] || STATICIP=""
        fi
        if [ "$STATICIP" ]; then
            echo -n " static IP $STATICIP" >&2

            # Set up IP
            ifconfig "$IFACE" "$STATICIP" netmask "$NETMASK"
            ifconfig "$IFACE" up

            # Set up gateway
            [ "$GATEWAY" ] && route add default gw "$GATEWAY"

            # Set up DNS
            if [ "$DNSDOMAIN" ]; then
                [ -f /etc/resolv.conf ] && rm /etc/resolv.conf
                touch /etc/resolv.conf
                if [ "$DNSDOMAIN" ]; then
                    echo "domain $DNSDOMAIN" >> /etc/resolv.conf
                    echo "search $DNSDOMAIN" >> /etc/resolv.conf
                fi
                for DNSSERVER in $DNS; do
                    echo "nameserver $DNSSERVER" >> /etc/resolv.conf
                done
            fi
        else
            echo -n " DHCP" >&2
            [ -f /etc/resolv.conf ] && rm /etc/resolv.conf
            ifconfig "$IFACE" up
            if [ "$BACKGROUND_UDHCPC" = "1" ]; then
                /sbin/udhcpc -i "$IFACE" -s "/etc/udhcpc.scripts" $UDHCPC_OPTIONS &
            else
                /sbin/udhcpc -i "$IFACE" -s "/etc/udhcpc.scripts" $UDHCPC_OPTIONS
            fi
        fi

        # Store the interface name to file
        echo "$IFACE" > "$SAVED_IFACE_FILE"
    else
        echo -n " missing $IFACE" >&2
        return 1
    fi
}

stop()
{
    # Read the interface that was started using start
    [ ! -f /var/run/net.iface ] || IFACE="$(cat "$SAVED_IFACE_FILE")"

    # Bring down networking
    if [ -d "/sys/class/net/$IFACE" ]; then
        ifconfig "$IFACE" down
        /sbin/start-stop-daemon --stop --exec /sbin/udhcpc
        true
    fi
}
