#!/tiny/busybox sh

# Copyright (c) 2009-2016, NVIDIA CORPORATION.  All rights reserved.
# See /etc/LICENSE file for details.

SQUASHFS_BIN="tiny/squash.bin"
LOOP="dev/loop0"
MNTSQUASH="mnt/squash"
NEWROOT="/mnt/root"
UUID="6cbfd9d7-fdea-487f-87fa-b521bfa4d71a"

# Display startup info
echo -e "\033[1mBooting TinyLinux\033[0m"

# Mount devfs and procfs
/tiny/busybox mount -t devtmpfs none /dev
/tiny/busybox mount -t proc none /proc

# Take note of current time (kernel boot time)
KERNEL_BOOT_TIME=$(/tiny/busybox awk '{print $1*1000}' /proc/uptime)

# Locate partition
find_partition()
{
    /tiny/busybox blkid | /tiny/busybox grep "$UUID" | /tiny/busybox cut -f 1 -d ':'
}
PARTITION=`find_partition`
RETRYCOUNT=0
while ! test "$PARTITION"; do
    [ $RETRYCOUNT -eq 0 ] && echo "Partition with root filesystem not found. Waiting..."
    WAITTIME=$(($(/tiny/busybox awk '{print $1*1000}' /proc/uptime) - $KERNEL_BOOT_TIME))
    if [ $WAITTIME -gt 10000 ]; then
        echo "Partition with UUID $UUID not found!"
        echo "Existing partitions:"
        /tiny/busybox blkid
        exec /tiny/busybox sh
    fi
    PARTITION=`find_partition`
    RETRYCOUNT=$(($RETRYCOUNT+1))
done
echo "Found partition: $PARTITION"

# Mount partition
/tiny/busybox mkdir -p "$NEWROOT"
/tiny/busybox mount -o rw,noatime "$PARTITION" "$NEWROOT"

# Unmount devfs and procfs
/tiny/busybox umount /dev /proc

# Setup loop device
/tiny/busybox losetup "$NEWROOT/$LOOP" "$NEWROOT/$SQUASHFS_BIN" || exec /tiny/busybox sh

# Mount squashed filesystem
/tiny/busybox mount -t squashfs -o ro "$NEWROOT/$LOOP" "$NEWROOT/$MNTSQUASH" || exec /tiny/busybox sh

# Store kernel boot time for reporting in /sbin/rc
echo "$KERNEL_BOOT_TIME" > "$NEWROOT/var/log/kernel_boot_time"

# Switch root to the non-volatile partition
exec /tiny/busybox switch_root -c /dev/console "$NEWROOT" /sbin/init

# Fallback - enter shell
exec /tiny/busybox sh
